---
title: "ViroProfiler: a containerized bioinformatics pipeline for viral metagenomic data analysis"
format: docx
editor: visual
bibliography: refs.bib
csl: gut-microbes.csl
---

Jinlong Ru^1,2^, Mohammadali Khan Mirzaei^1,2^, Jinling Xue^1,2^, Xue Peng^1,3^, Li Deng^1,2^\*

^1^ Institute of Virology, Helmholtz Centre Munich -- German Research Centre for Environmental Health, 85764 Neuherberg, Germany

^2^ Chair of Prevention of Microbial Diseases, School of Life Sciences Weihenstephan, Technical University of Munich, 85354 Freising, Germany

^3^ Faculty of Biology, Biocenter, Ludwig Maximilian University of Munich, 82152 Planegg-Martinsried, Munich, Germany

\*Correspondence: li.deng\@helmholtz-munich.de

## Abstract

Bacteriophages play central roles in the maintenance and function of most ecosystems by regulating bacterial communities. Yet, our understanding of their diversity remains limited due to the lack of robust bioinformatics standards. Here we present ViroProfiler, an in-silico workflow for analyzing shotgun viral metagenomic data.

ViroProfiler can be executed on a local Linux computer or cloud computing environments. It uses the containerization technique to ensure computational reproducibility and facilitate collaborative research. ViroProfiler is freely available at [https://github.com/deng-lab/viroprofiler](https://github.com/deng-lab/viroprofiler).

## Introduction 

Bacteriophages (or phages) are the most abundant biological entities on earth. They play a key role in most ecosystems by regulating bacterial communities. Recent studies suggested that changes in phage composition are associated with several diseases, such as IBD [@2019-WholeVirome_Clooney; @2019-Gut_Zuo], type 2 diabetes [@2018-Human_Ma], malnutrition [@2020-Bacteriophages_Mirzaei], and many more [@2021-Differences_Ma]. Understanding the mechanisms of interactions between phages and their bacterial hosts can provide some insights into the role of these viruses in the environment and the human body. [@2009-Quick_Noble].

The introduction of shotgun metagenomics has significantly improved our understanding of microbial community composition in most ecosystems, including the human body. However, with the introduction of Qiime [@2019-Reproducible_Bolyen] and Mothur [@2009-Introducing_Schloss] profiling of bacterial communities has become standardized, no such standard approach is yet available for analyzing the viral community. In addition, compared to metagenomics analyses of the bacterial communities, profiling viruses' compositions is still highly time-consuming through the current approaches commonly used in the field.

Recently, several tools have been developed to characterize different features of viral contigs after assembly. These tools can be classified into three groups based on their function: 1) tools designed for viral discovery, which include VirSorter2 [@2021-VirSorter2_Guo], DeepVirFinder [@2020-Identifying_Ren], and VIP [@2016-VIP_Li]. These tools mainly use homology searches against reference databases or features learned from viral sequences. 2) The second group includes pipelines for virome composition analysis, including VirusSeeker [@2017-VirusSeeker_Zhao] MetaVir [@2011-Metavir_Roux], ViromeScan [@2016-ViromeScan_Rampelli] and FastViromeExplorer [@2018-FastViromeExplorer_Tithi]. 3) The third group includes tools for taxonomy classification or functional annotation, such as VMAGP [@2011-Viral_Lorenzi] and vConTACT2 [@2019-Taxonomic_BinJang]. However, the function of these tools is mainly limited to identifying a few characterization factors in viral metagenomes. Some of these tools are also highly difficult to install or use for inexperienced users, which makes configuring and integrating them into other tools for generating reproducible data challenging for researchers with limited bioinformatics experience.

Here we present ViroProfiler, a containerized pipeline for viral metagenomic data analysis. ViroProfiler takes advantage of the most recently developed viral metagenomic analysis tools and databases to improve the taxonomy and functional annotation of viruses and their gene products. In addition, ViroProfiler uses containerization to ensure computational reproducibility. ViroProfiler can be executed through a container platform such as Docker and Singularity [@2017-Singularity_Kurtzer] on Linux clusters or cloud computing environments. It can also be installed via the Conda recipe for high-performance computing clusters that don't support containers.

## Results 

### Overview of the pipeline

*Quality control, assembly, and viral discovery*. We have included multiple quality control steps for generating an unbiased contig library for downstream analyses in ViroProfiler. These measures ensure to exclude redundancy in the contigs generated, identify prophages and dereplicate highly similar contigs of the same species. This provides a significant advantage to downstream analyses by accurately estimating the relative abundance of viral taxa and metabolic genes in samples. In addition, we included a binning option which enables construction of viral metagenome-assembled genomes (vMAGs) or bins, and provides a more realistic estimation of viral community compositions. After the non-redundant contig library (nrclib) or bins are built, we use VirSorter2 [@2021-VirSorter2_Guo], DeepVirFinder [@2020-Identifying_Ren] and CheckV [@2020-CheckV_Nayfach] to detect putative viral sequences. VirSorter2 and CheckV identify viral sequences based on their homology to the reference databases, while DeepVirFinder uses machine learning model to detect viral sequences. Therefore, it can detect novel viruses not showing homology to the public databases. ViroProfiler provides a scoring system for classifying viral contigs identified by multiple tools in this step (Figure 1 and S1).

*Functional annotation and AMG prediction*. In the annotation step, the pipeline provides two possible approaches. By default, ViroProfiler uses DRAM-v, the viral mode of DRAM [@2020-DRAM_Shaffer], an automated pipeline for identifying microbial metabolism. DRAM-v can identify auxiliary metabolic genes (AMGs) in viral sequences and annotating their genomes using multiple publicly available databases. The downside of using DRAM-v for annotation is that it slows down the analyses. Therefore, to overcome this issue, we provide an alternative approach for gene annotation, which relies on searching the EggNOG database [@2018-EggNOG_Huerta-Cepas] using eggNOG-mapper [@2021-EggNOGmapper_Cantalapiedra]. The latter is helpful if identifying AMGs in viral contigs is out of interest. For the taxonomy assignment, we combine vConTACT2 [@2019-Taxonomic_BinJang] and MMseqs2 taxonomy [@2021-Fast_Mirdita] module searching against NCBI viral RefSeq database. Combining these two methods, we can significantly improve the accuracy of taxonomy assignment to viral sequences from metagenomics data (Figure 1 and S1).

*Host prediction, and the assessment of replication cycle*. The potential hosts of viral sequences are predicted using iphop [@2022-IPHoP_Roux], a recently developed tool which uses a two-step framework that integrates multiple methods for assigning hosts to different viruses based on their genomic signatures with a \<10% false-discovery rate. In addition, our pipeline allows predicting the replication cycle of viral sequences using BACPHLIP [@2021-BACPHLIP_Hockenberry] and a newly developed in-house software Replidec [@2022-Replidec_Peng], with a combined accuracy of more than 90%. These tools use the genetic signatures of viral sequences, which are associated with three different types of replication cycles in viruses, lytic, lysogenic, and chronic, to predict their replication cycles (Figure 1 and S1).

### Visualization and report generation

We created a Shiny APP called ViroProfiler-viewer to visualize the pipeline's output. The ViroProfiler-viewer allows users to filter viral contigs based on their length, quality, and other annotations (i.e., taxonomy, host, and replication type). It also provides basic statistical analysis of virome compositions, such as alpha-diversity, beta-diversity, etc. In addition, the APP provides an interactive interface for visualizing contigs annotation (i.e., CDSs prediction and function) (Figure 2).

### Metagenome analyses and validation of the pipeline

To test ViroProfiler performance, we randomly selected and analyzed 20 out of 266 samples from an earlier study of viral community composition in fecal samples from UC patients and healthy individuals [@2019-Gut_Zuo]. Using ViroProfiler, we significantly improved the viral discovery rate by identifying 761 viral contigs compared to 183 contigs assembled by the authors. We also observe differences in phage community composition identified by the earlier study compared to the ViroProfiler findings. For example, contrary to the initial analyses, we observed a higher proportion of Podoviridae in samples from healthy individuals than in UC patients (34.6% vs 12.3%).

In addition, we did not observe significant differences in diversity scores, as seen in the initial analyses. Moreover, through ViroProfiler, we used a tool with a higher accuracy to strictly identify AMGs in viral contigs, contrary to the initial study that relied on the general functional capacity of the viral contigs, which could be misleading [@2019-Gut_Zuo]. Finally, ViroProfiler assigned a host to each viral contig, showing that UC patients carry fewer phages that infect Bacteroidia than healthy individuals (Figure 3).

## Discussion 

Viral communities are central to the maintenance of most ecosystems, including the human body. The introduction of shotgun metagenomics has provided opportunities to study these communities. Yet, analyses of generated data require applying multiple bioinformatic tools and need relevant programming skills. We believe ViroProfiler, a containerized pipeline for virome data analysis, can address these issues. ViroProfiler combines stand-alone analytical tools and databases with a workflow management system which enables flexible and reproducible analyses of virome data in an interactive environment while significantly shortening the processing time.

We used ViroProfiler for analyzing previously published viral metagenome data as part of our validation step. We then compared our results with the original analyses, which showed significant improvement in multiple profiling steps, including viral discovery, taxonomy assignment, functional annotation and host and replication cycle prediction. This was achieved while less than ten percent of the published data were analyzed. Therefore, we believe that ViroProfiler can substantially improve the quality of data analyses in virome research and pave the ground for more standardized characterization of the viral communities from complex ecosystems.

## Methods

### The pipeline

ViroProfiler integrates state-of-the-art bioinformatic tools via Conda environments and containerization techniques for processing viral metagenomic sequences in a nf-core [@2020-Nfcore_Ewels] based Nextflow [@2017-Nextflow_DiTommaso] pipeline (Figure 1). It executes series of standard viral metagenomics analysis subsequently or separately if part of the analysis has been done elsewhere. The installation process is described in detail at [https://github.com/deng-lab/viroprofiler](https://github.com/deng-lab/viroprofiler). For ensuring reproducible analyses, a specific version of the pipeline can always be run by using the version parameter in the command line (-r \<version\>). In addition, each container used in the workflow is tagged by the accompanying tool version, pre-build and stored on Docker Hub ([https://hub.docker.com/u/denglab](https://hub.docker.com/u/denglab)). The benefit of containers is that users don't need to install multiple software that may cause conflict. Each container contains one or more sub-workflows that is versioned, and Nextflow will automatically download and manage the containers used in each step.

### Quality control

The quality control of raw sequencing reads is performed using fastp [@2018-Fastp_Chen]. The high-quality reads are generated by following five consecutive steps: 1) trimming adapters, 2) removing low-quality reads and 3) trimming the low-quality bases (Q\<20) at the end of reads, 4) removing the trimmed reads with length \<30bp, and 5) if decontamination option is enabled, reads that show homology to mammalian host genomes will be removed [@2020-Gut_Gregory]. This is specifically beneficial for identification of AMGs as the previous studies [@2020-CheckV_Nayfach] have shown that the removal of host contamination substantially improves the accuracy of AMG identification and interpretation of viral-encoded functions.

### Genome assembly and dereplication

Each sample was individually assembled using metaSPAdes [@2017-MetaSPAdes_Nurk]. The assembled contigs were then merged into a multi-FASTA file and contigs shorter than a threshold (ex. 1kbp) were excluded from the further analyses. This step generated the long "complete contig library" (cclib_long). The quality of cclib_long was then evaluated using CheckV [@2020-CheckV_Nayfach], which were assessed for their quality, completeness, and potential contamination. The host flanking region were also removed from the final contigs. In order to remove redundancy in the contig library, we dereplicated the cclib_long by clustering contigs following the MIUViG guidelines (95% ANI - Average Nucleotide Identity and 85% AF -- Aligned Fraction) [@2019-Minimum_Roux] using custom python script anical.py and aniclust.py from CheckV. This step generated a non-redundant contig library (nrclib) for downstream analyses.

### Viral contig binning

Due to the limitation of assemblers, we usually get fragmented contigs of a viral genome. To overcome this limitation, ViroProfiler uses binning approach that relies on Phamb [@2022-Genome_Johansen] and vRhyme [@2022-VRhyme_Kieft] to identify contigs that belong to the same genome and classify them as a bin, or viral metagenome-assembled genome (vMAG). Phamb is a recently developed tool for binning phage genomes that relies on DeepVirFinder for viral contig discovery and a deep-learning algorithm for contig binning [@2021-Improved_Nissen]. It requires \>50,000 contigs as input, which sometimes can not be met. In that case, users can choose vRhyme for the binning step, which uses multi-sample coverage effect size comparisons between scaffolds, protein redundancy scoring mechanism, and machine learning model to detect bins. Viral quality, completeness and contamination ratio of bins were then assessed using CheckV. Binning is set as an optional step in ViroProfiler because the risk of false positive and the fact that contigs in a bin is connected randomly, which might not represent the actual viral genomes.

### Viral contig identification

ViroProfiler integrates four different tools for identification of viral sequences: 1) VirSorter2 [@2021-VirSorter2_Guo], 2) MMseqs2 taxonomy assignment [@2021-Fast_Mirdita] based on NCBI viral RefSeq, 3) CheckV [@2020-CheckV_Nayfach] and 4) DeepVirFinder [@2020-Identifying_Ren]. Briefly, contigs or bins are identified as putative viruses when they satisfy one of the following criteria: 1) identified as a virus in category 1, 2, 4, or 5 by VioSorter2 with default parameters (--virome mode); 2 classified as complete, high-quality, medium-quality and low-quality by CheckV; 3) have a score\>0.9 and p-value\<0.01 in the DeepVirFinder prediction.

ViroProfiler provides a confidence score to the contigs or bins identified as viruses using the following criteria, 1) "high confident" is assigned if they are classified as category 1,2 by VirSorter2, or have "Complete", "High-quality", "Medium-quality" annotation in CheckV; 2) "low confident" are contigs that do not fit into the first two quality groups, but predicted as viral sequences by DeepVirFinder, and have "Low quality" annotation in CheckV.

### Gene prediction and protein function annotation

To keep as many potential genes as possible, contigs in cclib_long are fed into Prodigal [@2010-Prodigal_Hyatt] for predicting protein-coding genes and translating them to proteins. To remove redundancy and improve annotation speed in downstream analysis, proteins are clustered using MMseqs2 [@2017-MMseqs2_Steinegger] using thresholds of minimum identity (0.7 by default) and coverage (0.9 by default). These thresholds can be modified in the params.yml config file before running the pipeline. Representative proteins of these clusters are used to make the non-redundant protein library (nrplib), which is assigned a computationally predicted function and gene ontology using eggNOG-mapper [@2021-EggNOGmapper_Cantalapiedra] searching against the EggNOG database [@2018-EggNOG_Huerta-Cepas]. This step will not be necessary in case prediction of AMGs is planned as DRAM-v also provides functional annotations. Functional annotations of viral contigs are annotated using DRAM-v, which searches viral genes against multiple databases, such as KEGG [@2000-KEGG_Kanehisa], PFAM [@2021-Pfam_Mistry], VOGDB ([https://vogdb.org/](https://vogdb.org/)) and NCBI viral RefSeq [@2021-RefSeq_Li]. DRAM-v also detects auxiliary metabolic genes (AMGs) in viral genomes. In addition, antimicrobial resistance and virulence genes can be identified using Abricate ([https://github.com/tseemann/abricate](https://github.com/tseemann/abricate)) to search genes against CARD [@2020-CARD_Alcock], ResFinder [@2022-ResFinder_Florensa] and VFDB [@2019-VFDB_Liu] databases.

### Taxonomy assignment 

Our pipeline assigns taxonomy to the viral contigs using vConTACT2 [@2017-VConTACT_Bolduc] and MMseqs2 taxonomy module [@2021-Fast_Mirdita]. Briefly, MMseqs2 assigns taxonomy to viral sequences by comparing their proteins to the NCBI viral RefSeq database while using the lowest common ancestor (LCA) for taxonomy assignment. When the viral contigs are longer than 10kb, their protein sequences are fed into vConTACT2 for virus clustering and taxonomy annotation. Taxonomy names and lineages are standardized using taxonkit [@2021-TaxonKit_Shen] and an in-house python script.

### Host and replication cycle prediction

We used iphop to predict virus-host ranges [@2022-IPHoP_Roux], which integrates multiple methods to provide host predictions. This makes its predictions highly reliable compared to other tools available for host prediction. The virus replication cycle is predicted using BACPHLIP [@2021-BACPHLIP_Hockenberry] and Replidec [@2022-Replidec_Peng].

### Viral abundance estimation 

To calculate the abundances of viruses in each sample, clean reads are mapped to contigs in nrclib using minimap2 (-ax sr) [@2018-Minimap2_Li] to create BAM files for each sample. Next, CoverM ([https://github.com/wwood/CoverM](https://github.com/wwood/CoverM)) is used to remove spurious read mappings at less than 90% identity in BAM files and then calculate the number of reads (-m count), trimmed mean of coverage (-m trimmed_mean) and covered fraction (-m covered_fraction) of each contig across all samples. In the downstream analyses, the abundance of a viral contig in a sample is usually set to zero if reads from that contig cover less than a threshold (ex. 50%) percentage in the sample. This refinement of the abundance table can be generated in ViroProfiler-viewer in an interactive way. Finally, if the abundance of genes is of interest, featureCounts [@2014-FeatureCounts_Liao] is used to calculate number of reads mapped to each protein-coding gene.

## Data and software availability

ViroProfiler source code is available at [https://github.com/deng-lab/viroprofiler](https://github.com/deng-lab/viroprofiler). ViroProfiler-viewer is available at [https://github.com/deng-lab/viroprofiler-viewer](https://github.com/deng-lab/viroprofiler-viewer).

## Funding

This work was funded by the German Research Foundation (D.F.G. Emmy Noether program, Project No. 273124240, SFB 1371, Project No. 395357507), Marie Sklodowska-Curie Actions Innovation Training Networks grant agreement no. 955974(VIROINF), and the European Research Council Starting grant (ERC StG 803077) awarded to L.D. J.R was supported by the China Scholarship Council (CSC).

## Author Contributions

J.R. developed the software. M.K.M. and J.R. drafted the manuscript. J.R and X.P. performed the analyses. J.X. wrote the documentation. M.K.M. and L.D. conceived and supervised the project. All authors reviewed and approved the manuscript.

## Declaration of interests

There are no interests to declare.

## References

::: {#refs}
:::


## Figures

![](figs/fig1.png){#fig1 fig-alt="Scheme of ViroProfiler pipeline." fig-width="100%"}

Figure 1. Schematic overview of the ViroProfiler pipeline.

![](figs/fig2.png){#fig2 fig-alt="ViroProfiler-viewer"}

Figure 2. VrioProfiler-viewer provides multiple reports ranging from analysis overview to data visualization in an interactive environment.

![](figs/fig3.png){#fig3 fig-alt="study"}

Figure 3. a) relative abundance of viral contigs generated by ViroProfiler; b) violin plots show different diversity indexes; c) heatmap of AMGs predicted in viral contigs from healthy and UC samples; d) Sankey plot of host prediction for different viral contigs.

{{< pagebreak >}}

## Supplementary Figures

![](figs/supp_fig1.png){#supp_fig1 fig-alt="workflow"}

Supplementary Figure 1. The figure provides a detailed overview of the ViroProfiler pipeline with the bioinformatic tools used in each analysis step.
